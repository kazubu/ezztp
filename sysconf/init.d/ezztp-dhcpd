#!/bin/sh

### BEGIN INIT INFO
# Provides:   ezztp-dhcpd
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: ezztp dhcp server
# Description:       ezztp dhcp server
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
ROOT_DIR=/home/ezztp/ezztp
PADRINO=/usr/local/bin/padrino
DAEMON=/home/ezztp/ezztp/bin/dhcpd.rb
ENVIRONMENT=production
DAEMON_OPTS="runner -e $ENVIRONMENT $DAEMON"
NAME=ezztp-dhcpd
DESC=ezztp-dhcpd

. /lib/init/vars.sh
. /lib/lsb/init-functions

PID=/var/run/ezztp-dhcpd.pid

do_start()
{
    # Return
    #   0 if daemon has been started
    #   1 if daemon was already running
    #   2 if daemon could not be started
    start-stop-daemon --start --quiet --pidfile $PID --exec $PADRINO --test \
        || return 1
    start-stop-daemon --start --quiet --background --make-pidfile --pidfile $PID --chdir $ROOT_DIR --exec $PADRINO -- \
        $DAEMON_OPTS  \
        || return 2
}

do_stop()
{
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    start-stop-daemon --stop --quiet --pidfile $PID
    RETVAL="$?"

    rm -f $PID

    sleep 1
    return "$RETVAL"
}

case "$1" in
    start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
    stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
    restart)
        log_daemon_msg "Restarting $DESC" "$NAME"

        do_stop
        case "$?" in
            0|1)
                do_start
                case "$?" in
                    0) log_end_msg 0 ;;
                    1) log_end_msg 1 ;; # Old process is still running
                    *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
            *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
    *)
        echo "Usage: $NAME {start|stop|restart}" >&2
        exit 3
        ;;
esac

